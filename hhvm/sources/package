#!/bin/bash
set -e
export PATH=$PATH:/usr/local/bin/

while [ ! -z "$1" ]; do
    case "$1" in
        "--stage")
            HHVM_REPO="git@github.com:hhvm/hhvm-staging.git"
            echo "Using staging repo: $HHVM_REPO"
            shift
            ;;
        "--dry-run")
            DRY_RUN=--dry-run
            echo "!!!! Doing a dry run !!!!"
            shift
            ;;
        "--verbose")
            set -x
            shift
            ;;
        *)
            break
            ;;
    esac
done

if [ -z "$HHVM_REPO" ]; then
  HHVM_REPO="https://github.com/facebook/hhvm.git"
  echo "Using default repo: $HHVM_REPO"
fi

if [ "$#" -lt 1 ]; then
    echo "$0 [--stage|--dry-run|--verbose] VERSION [SOURCE_DIR]"
    echo "  for example, stable:"
    echo "    $0 3.3.0-1"
    echo "  or nightly:"
    echo "    $0 3.4.0-nightly"
    exit
fi

DIR=`dirname $0`
DIR=`readlink -m $DIR`
VERSION=$1
HHVM_VERSION=`echo $VERSION | cut -d '-' -f 1`
SOURCE=$2

if [ -z "$SOURCE" -o ! -d "$SOURCE" ]; then
	SOURCE=`mktemp -d`
fi

GIT_TARGET=HHVM-$HHVM_VERSION

if [ `echo $VERSION | grep '.*-nightly.*'` ]; then
	echo "Nighly, doing nothing."
	exit
fi

cd $SOURCE
git clone "$HHVM_REPO" $SOURCE/hhvm-${VERSION}
cd $SOURCE/hhvm-${VERSION}
git checkout $GIT_TARGET

# After the checkout since the submodules might be different between versions
git submodule update --init --recursive

# Apply any patches
for PATCH in $(compgen -G 'third-party/*/patches/*'); do
    echo PATCH: $PATCH
    ABS_PATCH="$(cd $(dirname $PATCH) ; pwd -L)/$(basename $PATCH)"
    GITWORK="$(dirname $(dirname $PATCH))/src"
    git -C "$GITWORK" config user.email 'hhvm@fb.com'
    git -C "$GITWORK" config user.name 'hhvm'
    git -C "$GITWORK" am $ABS_PATCH
    rm $PATCH
done

# Cleanup git folders.
find -name ".git"|xargs rm -rf

cd $SOURCE
tar cfvj hhvm-${VERSION}.tar.bz2 hhvm-${VERSION}

SSH_KEY=$HOME/.ssh/id_rsa_phraseless
STAGING=/var/tmp/staging/source/
RSYNC_HOST=ftp-osl.osuosl.org

mkdir -p $STAGING $STAGING/nightly
rsync --exclude='*.bz2' -av -e "ssh -i $SSH_KEY" hiphop@$RSYNC_HOST:data/source/ $STAGING || true

cp $SOURCE/hhvm-${VERSION}.tar.bz2 $STAGING/
echo Source written to $STAGING/hhvm-${VERSION}.tar.bz2

rsync $DRY_RUN -av -e "ssh -i $SSH_KEY" $STAGING hiphop@$RSYNC_HOST:data/source/
if [ ! -z "$DRY_RUN" ]; then
    ssh -i $SSH_KEY hiphop@$RSYNC_HOST "/home/hiphop/trigger-hiphop"
fi

# cleanup
rm -rf $SOURCE
